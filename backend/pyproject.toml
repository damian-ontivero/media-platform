[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[project]
name = "media_platform"
description = "A media platform for sharing movies and series."
version = "0.1.0"
requires-python = ">=3.12"
readme = "README.md"
authors = [
    { name = "Damian Ontivero", email = "damian.ontivero.dev@gmail.com" },
]
dependencies = [
    "aio-pika>=9.4.2",
    "alembic>=1.13.2",
    "cryptography>=43.0.0",
    "ditainer>=0.4.33",
    "fastapi<1.0.0,>=0.111.0",
    "moviepy>=1.0.3",
    "python-multipart>=0.0.9",
    "python-dotenv>=1.0.1",
    "psycopg2-binary>=2.9.9",
    "sqlalchemy>=2.0.32",
    "uvicorn>=0.30.5",
    "werkzeug>=3.0.3",
]

[project.urls]
Homepage = "https://github.com/damian-ontivero/media-platform"
Repository = "https://github.com/damian-ontivero/media-platform"


[tool.pdm]
distribution = true

[tool.pdm.build]
includes = ["src"]
excludes = ["tests"]

[[tool.pdm.source]]
name = "testpypi"
url = "https://test.pypi.org/simple"

[tool.pdm.dev-dependencies]
dev = [
    "ipdb>=0.13.13",
]
format = [
    "ruff>=0.5.6",
]
test = [
    "factory-boy>=3.3.0",
    "pytest>=8.3.2",
    "pytest-asyncio>=0.23.8",
    "pytest-mock>=3.14.0",
]

[tool.pdm.scripts]
# Backoffice
"bo:rabbitmq" = { call = "src.apps.backoffice.scripts.rabbitmq_setup:run" }
"bo:migrations" = { cmd = "alembic -n backoffice upgrade head" }
"bo:test" = { cmd = "pytest tests/contexts/backoffice -vs" }
"bo:api" = { cmd = "uvicorn src.apps.backoffice.api.v0.main:app --reload --port 8001" }
# Catalog
"ca:rabbitmq" = { call = "src.apps.catalog.scripts.rabbitmq_setup:run" }
"ca:migrations" = { cmd = "alembic -n catalog upgrade head" }
"ca:test" = { cmd = "pytest tests/contexts/catalog -vs" }
"ca:api" = { cmd = "uvicorn src.apps.catalog.api.v0.main:app --reload --port 8002" }
# Format
"lint" = { cmd = "ruff check --fix" }
"format" = { cmd = "ruff format" }


[tool.ruff]
line-length = 120

[tool.ruff.format]
skip-magic-trailing-comma = true
